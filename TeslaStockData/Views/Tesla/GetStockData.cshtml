
@model IEnumerable<TeslaStockData.Models.TeslaModel>
@{
    int currentPageIndex = 1;
    int totalPages = 4;
    int i = 0;
}

<body>

   <div class="container" >
       <div class="row">

           <div class="col">

               <h4 style="color:orangered" class=" mt-3">Tesla Stock Data 2021</h4>
           

               <table class="table border mt-4">
                   <thead>
                       <tr>
                           <th scope="col">Index</th>
                           <th scope="col"> Date</th>
                           <th scope="col">Open</th>
                           <th scope="col">High</th>
                           <th scope="col">Low</th>
                           <th scope="col">Close</th>
                           <th scope="col">Adj_Close</th>
                           <th scope="col">Volume</th>
                           <th scope="col">Update/Delete</th>
                       </tr>
                   </thead>
                   <tbody>



                       @foreach (var item in Model)
                       {

                           {
                               currentPageIndex = item.CurrentPageIndex;
                               totalPages = item.TotalRecords;
                               i = i  + 1;

                           }


                           @Html.HiddenFor(model => item.Id)
                           <tr>
                               <th scope="row">@i</th>

                               <td>
                                   @Html.DisplayFor(modelItem => item.Date)

                               </td>
                               <td>
                                   @Html.DisplayFor(modelItem => item.Open)
                               </td>
                               <td>
                                   @Html.DisplayFor(modelItem => item.High)
                               </td>
                               <td>
                                   @Html.DisplayFor(modelItem => item.Low)
                               </td>
                               <td>
                                   @Html.DisplayFor(modelItem => item.Close)
                               </td>
                               <td>
                                   @Html.DisplayFor(modelItem => item.Adj_Price)
                               </td>
                               <td>
                                   @Html.DisplayFor(modelItem => item.Volume)
                               </td>
                               <td>
                                   @Html.ActionLink("Edit", "EditSTockData", new { id = item.Id }) |
                                   @Html.ActionLink("Delete", "DeleteStockData", new { id = item.Id }, new { onclick = "return confirm('Are sure wants to delete?');" })
                               </td>
                           </tr>

                       }






                   </tbody>
               </table>

           </div>

       </div>


       <div class="row">
           <div class="col text-end">
               <p class="ms-3">Page @currentPageIndex of @totalPages</p>

               @if (currentPageIndex > 1)
               {
                   <button class="btn btn-info text-danger text-end "> @Html.ActionLink("Previous Page", "GetStockData", new { currentPageIndex = currentPageIndex - 1 } ,new { @class = "text-dark fw-bold text-decoration-none" })</button>
               }
               @if (currentPageIndex < totalPages)
               {
                   <button class="btn btn-info  text-dark ms-3"> @Html.ActionLink("Next Page", "GetStockData", new { currentPageIndex = currentPageIndex + 1 }, new { @class = "text-dark fw-bold  text-decoration-none" })</button>
               }


           </div>

       </div>







   </div>





    <div>

        <br />

       
        <script type="text/javascript">
            function GetData(currentPageIndex) {
                debugger;
                $.ajax({
                    type: "Post",
                    url: "GetStockData?currentPageIndex=2",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",

                    success: function (response) {
                        debugger;
                        Modal = response;
                        RefreshLV("GetStockData");
                        console.log(response);
                    }, error: function (err) {
                        debugger;
                        console.log(err);
                    }
                });
            }
        </script>
    </div>
</body>




